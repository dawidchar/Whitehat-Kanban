<center>
    <div class="mt-2"><h1>My Boards</h1></div>
<button type="button" class="addboard-btn btn mt-2" data-toggle="modal" data-target="#addBoardModal">+ Add Board</button>
</center>
<link href="https://fonts.googleapis.com/css2?family=Open+Sans&display=swap" rel="stylesheet"> 
<style>
    .addboard-btn {
        background-color: #8cc076;
        color: #fff;
        font-weight: 900;
    }
    .addboard-btn:hover {
        color: #fff;
        opacity: 0.85;
    }
    .imageicon {
        background-position: center;
        background-size: cover;
        width: 100%;
        height: 100%;
    }
    .main-grid {
        margin: 1rem;
        display: grid;
        position: relative; /* creates absolute positioning containing block */
        grid-template-columns: auto auto auto;
        grid-template-rows: none;
        gap: 1.2rem;
        font-family: 'Open Sans', sans-serif;
    }
    article {
        border-radius: 4px;
        position: relative;
        min-height: 12rem;
        min-width: 20rem;
        width: 100%;
        background-position: center;
        opacity: 0.9;
    }
    article h2 {
        position: absolute;
        bottom: 0;
        text-align: center;
        width: 100%;
        margin: 0;
        padding-bottom: 0.5rem;
        padding-top: 0.5rem;
        background: #8cc076;
        color: #fff;
        font-size: 24px;
    }
    .user-image {
        max-width: 3rem;
        max-height: 3rem;
        z-index: 100;
        position: absolute;
        border-radius: 50%;
        margin: 0.3rem;
        right: 0;
    }
    a {
        color: inherit; /* blue colors for links too */
        text-decoration: inherit; /* no underline */
    }

    .board-info {
        background-color: white;
        width: 100%;
        height: 100%;
        opacity: 0;
        position: absolute;
        z-index: 101;
        text-align: center;
        -webkit-transition: opacity 1s;
    }
    .board-info:hover {
        opacity: 0.6;
        display: block;
    }
</style>
<div id="app-container">
<div id="app" />
</div>

<div class="modal fade" id="addBoardModal" tabindex="-1" role="dialog" aria-labelledby="addBoardModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addBoardModalLabel">Add Board</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <form>
            <div class="form-group">
                <label for="formName">Board Name</label>
                <input type="text" class="form-control" id="formName" required>
            </div>
            <div class="form-group">
                <label for="formDesc">Board Description</label>
                <input type="text" class="form-control" id="formDesc" required>
            </div>
            <div class="form-group">
                <label for="formImage">Board Image</label>
                <input type="text" class="form-control" id="formImage" required>
            </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" onclick="newBoard()">Add Board</button>
      </div>
    </div>
  </div>
</div>

<script>
    const userid = getCookie("userid")
    const state = {
        boards: [],
        userImageRight: 0,
        userImageIndex: 100
    };
    const view = state => `{{> myboards }}`
    const update = {
        populate: async (state) => {
            state.boards = await fetch(`/api/users/${userid}/boards`).then(res => res.json())
            return state;
        },
        removeHiddenDivs: (state) => {
            document.getElementsByClassName('toBeDeleted').remove()
            return state;
        }
    }
    app.start("app", state, view, update)
    app.run('populate')


    async function newBoard() {
        var rawJSON = {"title": document.getElementById('formName').value, "userid": userid, "desc": document.getElementById('formDesc').value, "image": document.getElementById('formImage').value}
        console.log(rawJSON)
        var requestOptions = {
        method: 'POST',
        headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/json'
        },
        body: JSON.stringify(rawJSON),
        redirect: 'follow'
        };

        await fetch("http://localhost:3000/api/boards", requestOptions)
        .then(response => response.text())
        .then(result => {
            console.log(result)
            app.run('populate');
            $('#addBoardModal').modal('hide')
        })
        .catch(error => console.log('error', error));
    }
</script>